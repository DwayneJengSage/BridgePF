package org.sagebionetworks.bridge.dao;

import static com.google.common.base.Preconditions.checkNotNull;

import java.util.LinkedHashSet;
import java.util.Set;

import org.sagebionetworks.bridge.BridgeUtils;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ArrayNode;

public enum ParticipantOption {

    SHARING_SCOPE(SharingScope.NO_SHARING.name(), "sharingScope") {
        public String deserialize(JsonNode node) {
            checkNotNull(node);
            return SharingScope.valueOf(node.asText().toUpperCase()).name();
        }
    },
    EMAIL_NOTIFICATIONS(Boolean.TRUE.toString(), "notifyByEmail") {
        public String deserialize(JsonNode node) {
            checkNotNull(node);
            return Boolean.toString(node.asBoolean());
        }
    },
    EXTERNAL_IDENTIFIER(null, "externalId") {
        public String deserialize(JsonNode node) {
            checkNotNull(node);
            return node.asText();
        }
    },
    DATA_GROUPS(null, "dataGroups") {
        public String deserialize(JsonNode node) {
            checkNotNull(node);
            return arrayNodeToOrderedString(node);
        }
    },
    LANGUAGES(null, "languages") {
        public String deserialize(JsonNode node) {
            checkNotNull(node);
            return arrayNodeToOrderedString(node);
        }
    };

    private final String defaultValue;
    private final String fieldName;
    
    private static String arrayNodeToOrderedString(JsonNode node) {
        Set<String> results = new LinkedHashSet<>();
        ArrayNode array = (ArrayNode)node;
        for (int i = 0; i < array.size(); i++) {
            results.add(array.get(i).asText());
        }
        return BridgeUtils.setToCommaList(results);
    }
    
    private ParticipantOption(String defaultValue, String fieldName) {
        this.defaultValue = defaultValue;
        this.fieldName = fieldName;
    }
    
    public String getFieldName() {
        return fieldName;
    }
    
    public String getDefaultValue() {
        return defaultValue;
    }
    
    public abstract String deserialize(JsonNode node);

    public enum SharingScope {
        /**
         * Don't export data generated by this participant.
         */
        NO_SHARING("Not Sharing"),
        /**
         * Only export participant's data to a data set for the original study researchers and their affiliated research
         * partners.
         */
        SPONSORS_AND_PARTNERS("Sponsors and Partners Only"),
        /**
         * Export participant's data to a data set that can be used by any researcher who qualifies given the governance
         * qualifications of this data set.
         */
        ALL_QUALIFIED_RESEARCHERS("All Qualified Researchers");
        
        private final String label;
        
        private SharingScope(String label) {
            this.label = label;
        }
        public String getLabel() {
            return label;
        }
    }
   
}
