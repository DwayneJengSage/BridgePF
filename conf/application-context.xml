<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean id="bridgeConfig" class="org.sagebionetworks.bridge.config.BridgeConfigFactory"
            factory-method="getConfig" />

    <bean id="healthCodeEncryptor" class="org.sagebionetworks.bridge.crypto.BridgeEncryptor">
        <constructor-arg value="#{bridgeConfig.healthCodePassword}"/>
    </bean>

    <bean id="awsCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg index="0" value="#{bridgeConfig.getProperty('aws.key')}"/>
        <constructor-arg index="1" value="#{bridgeConfig.getProperty('aws.secret.key')}"/>
    </bean>

    <bean id="s3UploadCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg index="0" value="#{bridgeConfig.getProperty('aws.key.upload')}"/>
        <constructor-arg index="1" value="#{bridgeConfig.getProperty('aws.secret.key.upload')}"/>
    </bean>

    <!-- Simple Email Service -->

    <bean id="sesClient" class="com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient">
        <constructor-arg index="0">
            <ref bean="awsCredentials" />
        </constructor-arg>
    </bean>

    <!-- S3 -->

    <bean id="s3Client" class="com.amazonaws.services.s3.AmazonS3Client">
        <constructor-arg index="0">
            <ref bean="awsCredentials" />
        </constructor-arg>
    </bean>

    <bean id="s3UploadClient" class="com.amazonaws.services.s3.AmazonS3Client">
        <constructor-arg index="0">
            <ref bean="s3UploadCredentials" />
        </constructor-arg>
    </bean>

    <bean id="uploadTokenServiceClient" class="com.amazonaws.services.securitytoken.AWSSecurityTokenServiceClient">
        <constructor-arg index="0">
            <ref bean="s3UploadCredentials" />
        </constructor-arg>
    </bean>

    <!-- DynamoDB -->

    <bean id="dynamoDbClient" class="com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient">
        <constructor-arg index="0">
            <ref bean="awsCredentials" />
        </constructor-arg>
    </bean>

    <bean id="healthCodeDao" class="org.sagebionetworks.bridge.dynamodb.DynamoHealthCodeDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
    </bean>

    <bean id="healthIdDao" class="org.sagebionetworks.bridge.dynamodb.DynamoHealthIdDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
    </bean>

    <bean id="studyConsentDao" class="org.sagebionetworks.bridge.dynamodb.DynamoStudyConsentDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
    </bean>

    <bean id="userConsentDao" class="org.sagebionetworks.bridge.dynamodb.DynamoUserConsentDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
    </bean>

    <bean id="surveyDao" class="org.sagebionetworks.bridge.dynamodb.DynamoSurveyDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
    </bean>
    
    <bean id="surveyResponseDao" class="org.sagebionetworks.bridge.dynamodb.DynamoSurveyResponseDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
        <property name="surveyDao" ref="surveyDao"/>
    </bean>
    
    <bean id="schedulePlanDao" class="org.sagebionetworks.bridge.dynamodb.DynamoSchedulePlanDao">
        <property name="dynamoDbClient" ref="dynamoDbClient" />
    </bean>
    
    <bean id="exceptionInterceptor" class="interceptors.ExceptionInterceptor"/>
    
    <bean id="scheduleChangeListener" class="org.sagebionetworks.bridge.services.ScheduleChangeListener"/>

    <!-- Redis -->
    
    <bean id="userLockDao" class="org.sagebionetworks.bridge.redis.RedisUserLockDao"/>

    <!-- Stormpath identity service -->

    <bean id="stormpathClient" class="org.sagebionetworks.bridge.stormpath.StormpathFactory" 
        factory-method="createStormpathClient" scope="singleton">
    </bean>

    <!-- Caching abstraction -->

    <bean id="cacheProvider" class="org.sagebionetworks.bridge.cache.CacheProvider"/>

    <!-- Play controllers. -->

    <bean id="BaseController" class="controllers.BaseController" abstract="true">
        <property name="authenticationService" ref="authenticationService" />
        <property name="studyService" ref="studyService" />
        <property name="cacheProvider" ref="cacheProvider" />
    </bean>

    <bean id="AdminController" class="controllers.AdminController" abstract="true" parent="BaseController">
    </bean>

    <bean id="proxiedController" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyTargetClass" value="true"/>
        <property name="interceptorNames">
            <list><value>exceptionInterceptor</value></list>
        </property>
    </bean>

    <bean id="controllers.ApplicationController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.ApplicationController" parent="BaseController">
            </bean>
        </property>
    </bean>

    <bean id="controllers.AuthenticationController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.AuthenticationController" parent="BaseController">
            </bean>
        </property>
    </bean>

    <bean id="controllers.HealthDataController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.HealthDataController" parent="BaseController">
                <property name="healthDataService" ref="healthDataService"/>
            </bean>
        </property>
    </bean>

    <bean id="controllers.TrackerController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.TrackerController" parent="BaseController">
                <property name="jsonSchemaValidator">
                    <bean class="global.JsonSchemaValidator"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="controllers.UserProfileController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.UserProfileController" parent="BaseController">
                <property name="userProfileService" ref="userProfileService"/>
            </bean>
        </property>
    </bean>

    <bean id="controllers.ConsentController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.ConsentController" parent="BaseController">
                <property name="consentService" ref="consentService" />
            </bean>
        </property>
    </bean>

    <bean id="controllers.BackfillController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.BackfillController" parent="AdminController">
                <property name="backfillService" ref="backfillService" />
            </bean>
        </property>
    </bean>

    <bean id="controllers.StudyConsentController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.StudyConsentController" parent="AdminController">
                <property name="studyConsentService" ref="studyConsentService" />
            </bean>
        </property>
    </bean>

    <bean id="controllers.SurveyController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.SurveyController" parent="BaseController">
                <property name="surveyService" ref="surveyService" />
            </bean>
        </property>
    </bean>

    <bean id="controllers.UploadController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.UploadController" parent="BaseController">
                <property name="uploadService" ref="uploadService" />
            </bean>
        </property>
    </bean>

    <bean id="controllers.SurveyResponseController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.SurveyResponseController" parent="BaseController">
                <property name="surveyResponseDao" ref="surveyResponseDao" />
            </bean>
        </property>
    </bean>    

    <bean id="studyService" class="org.sagebionetworks.bridge.services.StudyServiceImpl">
        <property name="studies">
            <list>
                <bean class="org.sagebionetworks.bridge.models.Study">
                    <constructor-arg index="0" value="Parkinsonâ€™s Disease Mobile Study"/>
                    <constructor-arg index="1" value="neurod"/>
                    <constructor-arg index="2" value="17"/>
                    <constructor-arg index="3" value="#{bridgeConfig.getProperty('stormpath.neurod.directory.href')}"/>
                    <constructor-arg index="4">
                        <list>
                            <value>10.0.2.2</value> <!-- IE VirtualBox Machine, local development -->
                            <value>localhost</value>
                            <value>bridge-develop.herokuapp.com</value>
                            <value>bridge-uat.herokuapp.com</value>
                            <value>pd-staging.sagebridge.org</value>
			                 <value>pd.sagebridge.org</value>
                        </list>
                    </constructor-arg>
                    <constructor-arg index="5">
                        <list>
                            <ref bean="pb-tracker"/>
                            <ref bean="med-tracker"/>
                        </list>
                    </constructor-arg>
                    <constructor-arg index="6" value="file:conf/email-templates/neurod-consent.html"/>
                    <constructor-arg index="7" value="neurod_researcher"/>                       
                </bean>
            </list>
        </property>
    </bean>

    <bean id="pb-tracker" class="org.sagebionetworks.bridge.models.Tracker">
        <property name="name" value="Blood Pressure Reading"/>
        <property name="type" value="BloodPressure"/>
        <property name="id" value="1"/>
        <property name="schemaFile" value="file:conf/schemas/bloodpressure.json"/>
    </bean>

    <bean id="med-tracker" class="org.sagebionetworks.bridge.models.Tracker">
        <property name="name" value="Medication"/>
        <property name="type" value="Medication"/>
        <property name="id" value="2"/>
        <property name="schemaFile" value="file:conf/schemas/medication.json"/>
    </bean>

    <!-- Services -->

    <bean id="healthCodeService" class="org.sagebionetworks.bridge.services.HealthCodeServiceImpl">
        <property name="healthIdDao" ref="healthIdDao" />
        <property name="healthCodeDao" ref="healthCodeDao" />
    </bean>

    <bean id="authenticationService" class="org.sagebionetworks.bridge.services.AuthenticationServiceImpl">
        <property name="stormpathClient" ref="stormpathClient" />
        <property name="cacheProvider" ref="cacheProvider" />
        <property name="bridgeConfig" ref="bridgeConfig" />
        <property name="healthCodeEncryptor" ref="healthCodeEncryptor" />
        <property name="healthCodeService" ref="healthCodeService" />
    </bean>

    <bean id="healthDataService" class="org.sagebionetworks.bridge.services.HealthDataServiceImpl">
        <property name="updateMapper">
            <bean class="com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper">
                <constructor-arg index="0" ref="dynamoDbClient"/>
                <constructor-arg index="1">
                    <bean class="org.sagebionetworks.bridge.dynamodb.DynamoDBMapperConfigFactory" factory-method="getUpdateMapper">
                        <constructor-arg><value>org.sagebionetworks.bridge.dynamodb.DynamoHealthDataRecord</value></constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="createMapper">
            <bean class="com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper">
                <constructor-arg index="0" ref="dynamoDbClient"/>
                <constructor-arg index="1">
                    <bean class="org.sagebionetworks.bridge.dynamodb.DynamoDBMapperConfigFactory" factory-method="getCreateMapper">
                        <constructor-arg><value>org.sagebionetworks.bridge.dynamodb.DynamoHealthDataRecord</value></constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="userProfileService" class="org.sagebionetworks.bridge.services.UserProfileServiceImpl">
        <property name="stormpathClient" ref="stormpathClient" />
    </bean>

    <bean id="consentService" class="org.sagebionetworks.bridge.services.ConsentServiceImpl">
        <property name="stormpathClient" ref="stormpathClient" />
        <property name="healthCodeEncryptor" ref="healthCodeEncryptor" />
        <property name="healthCodeService" ref="healthCodeService" />
        <property name="sendMailService" ref="sendEmailViaAmazonService"/>
        <property name="studyConsentDao" ref="studyConsentDao"/>
        <property name="userConsentDao" ref="userConsentDao"/>
    </bean>
    
    <bean id="studyConsentService" class="org.sagebionetworks.bridge.services.StudyConsentServiceImpl">
        <property name="studyConsentDao" ref="studyConsentDao" />
    </bean>

    <bean id="uploadSessionCredentialsService" class="org.sagebionetworks.bridge.services.UploadSessionCredentialsService">
        <constructor-arg ref="uploadTokenServiceClient" />
    </bean>

    <bean id="uploadService" class="org.sagebionetworks.bridge.services.UploadServiceImpl">
        <property name="uploadSessionCredentialsService" ref="uploadSessionCredentialsService" />
        <property name="s3UploadClient" ref="s3UploadClient" />
        <property name="s3Client" ref="s3Client" />
    </bean>

    <!-- Backfill -->
    <bean id="backfillService" class="org.sagebionetworks.bridge.services.BackfillService">
        <property name="stormpathClient" ref="stormpathClient"/>
        <property name="healthCodeEncryptor" ref="healthCodeEncryptor" />
        <property name="healthCodeService" ref="healthCodeService" />
        <property name="studyConsentDao" ref="studyConsentDao" />
        <property name="userConsentDao" ref="userConsentDao" />
    </bean>

    <bean id="sendEmailViaAmazonService" class="org.sagebionetworks.bridge.services.SendMailViaAmazonService">
        <property name="fromEmail" value="support@sagebridge.org"/>
        <property name="emailClient" ref="sesClient" />
    </bean>
    
    <bean id="userAdminService" class="org.sagebionetworks.bridge.services.StormPathUserAdminService">
        <property name="authenticationService" ref="authenticationService"/>
        <property name="consentService" ref="consentService"/>
        <property name="healthDataService" ref="healthDataService"/>
        <property name="studyService" ref="studyService"/>
        <property name="stormpathClient" ref="stormpathClient"/>
        <property name="userLockDao" ref="userLockDao"/>
    </bean>
    
    <bean id="surveyService" class="org.sagebionetworks.bridge.services.SurveyServiceImpl">
        <property name="surveyDao" ref="surveyDao"/>
    </bean>    
</beans>
