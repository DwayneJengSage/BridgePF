<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean id="bridgeConfig" class="org.sagebionetworks.bridge.config.BridgeConfigFactory"
            factory-method="getConfig" />

    <bean id="awsCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg index="0" value="#{bridgeConfig.getProperty('aws.key')}"/>
        <constructor-arg index="1" value="#{bridgeConfig.getProperty('aws.secret.key')}"/>
    </bean>

    <bean id="exceptionInterceptor" class="interceptors.ExceptionInterceptor" />

    <bean id="synapseClient" class="org.sagebionetworks.bridge.synapse.SynapseClientFactory" 
        factory-method="createSynapseClient" scope="prototype">
        <constructor-arg index="0" ref="bridgeConfig"/>
    </bean>

    <!-- Play controllers. -->

    <bean id="proxiedController" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyTargetClass" value="true"/>
        <property name="interceptorNames">
            <list><value>exceptionInterceptor</value></list>
        </property>
    </bean>

    <bean id="controllers.ApplicationController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.ApplicationController">
                <property name="authenticationService" ref="authenticationService" />
                <property name="bridgeConfig" ref="bridgeConfig" />
            </bean>
        </property>
    </bean>
    
    <bean id="controllers.AuthenticationController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.AuthenticationController">
                <property name="authenticationService" ref="authenticationService"/>
            </bean>
        </property>
    </bean>
    
    <bean id="controllers.HealthDataController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.HealthDataController">
                <property name="healthDataService" ref="healthDataService"/>
                <property name="authenticationService" ref="authenticationService"/>
                <property name="studyControllerService" ref="studyControllerService"/>
            </bean>
        </property>
    </bean>
    
    <bean id="controllers.TrackerController" parent="proxiedController">
        <property name="target">
            <bean class="controllers.TrackerController">
                <property name="jsonSchemaValidator">
                    <bean class="global.JsonSchemaValidator"/>
                </property>
                <property name="studyControllerService" ref="studyControllerService"/>
            </bean>
        </property>
    </bean>
    
    <bean id="studyControllerService" class="controllers.StudyControllerService">
        <property name="studies">
            <list>
                <bean class="org.sagebionetworks.bridge.models.Study">
                    <property name="hostnames">
                        <list>
                            <value>localhost</value>
                            <value>bridge-development.herokuapp.com</value>
                        </list>
                    </property>
                    <property name="id" value="1"/>
                    <property name="trackers">
                        <list>
                            <ref bean="pb-tracker"/>
                            <!-- <ref bean="med-tracker"/> -->
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="pb-tracker" class="org.sagebionetworks.bridge.models.Tracker">
        <property name="name" value="Blood Pressure Reading"/>
        <property name="type" value="BloodPressure"/>
        <property name="id" value="1"/>
        <property name="schemaFile" value="file:conf/schemas/bloodpressure.json"/>
    </bean>

    <bean id="med-tracker" class="org.sagebionetworks.bridge.models.Tracker">
        <property name="name" value="Medication"/>
        <property name="type" value="Medication"/>
        <property name="id" value="2"/>
        <property name="schemaFile" value="file:conf/schemas/medication.json"/>
    </bean>
    
    <!-- Services -->

    <bean id="authenticationService" class="org.sagebionetworks.bridge.services.AuthenticationServiceImpl"/>
    
    <bean id="healthDataService" class="org.sagebionetworks.bridge.services.HealthDataServiceImpl">
        <property name="updateMapper">
            <bean class="com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper">
                <constructor-arg index="0" ref="dynamoDbClient"/>
                <constructor-arg index="1">
                    <bean class="org.sagebionetworks.bridge.dynamodb.DynamoDBMapperConfigFactory" factory-method="getUpdateMapper">
                        <constructor-arg><value>org.sagebionetworks.bridge.dynamodb.DynamoHealthDataRecord</value></constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="createMapper">
            <bean class="com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper">
                <constructor-arg index="0" ref="dynamoDbClient"/>
                <constructor-arg index="1">
                    <bean class="org.sagebionetworks.bridge.dynamodb.DynamoDBMapperConfigFactory" factory-method="getCreateMapper">
                        <constructor-arg><value>org.sagebionetworks.bridge.dynamodb.DynamoHealthDataRecord</value></constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    
    <bean id="dynamoDbClient" class="com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient" scope="prototype">
        <constructor-arg index="0">
            <ref bean="awsCredentials" />
        </constructor-arg>
    </bean>    
    
</beans>
